import numpy as np
import cv2

SAVE_PATH = './calibration3.npz'

def computeF(K1,K2,R,t):

	Tx = np.mat([[0, -t[2], t[1]],[t[2],0,-t[0]],[-t[1],-t[0],0]])
	E = np.dot(R,Tx)
	F = np.dot(np.dot(np.linalg.inv(K1).T,E),np.linalg.inv(K2))
	#A = np.dot(np.dot(K1,np.transpose(R)),t)
	#C = np.mat([[0,-A[2],A[1]],[A[2],0,-A[0]],[-A[1],-A[0],0]])
	#K = np.transpose(np.linalg.inv(K2))

	return  F


dist = [[],[],[],[]]
dist[0] = np.mat([2.84379221e-02,9.74090243e-01,2.23212183e-02,-4.79641040e-03,-9.69318064e+00])
dist[1] = np.mat([0.24262018,-1.40225777,0.00560232,0.03124385,3.23022084])
dist[2] = np.mat([-0.11355449,  1.31228271, -0.03029425,  0.01548573, -3.70937006])
dist[3] = np.mat([3.22655573e-01,-3.97778472e+00,-1.13833319e-02,-1.18791144e-02,1.99436256e+01])

K = [[],[],[],[]]
K[0] = np.mat([[755.6870,0,3353.8816],[0,745.1278,171.0287],[0,0,1]])
K[1] = np.mat([[663.2206,0,285.1075],[0,654.3930,168.3780],[0,0,1]])
K[2] = np.mat([[735.8865,0,235.9169],[0,759.6091,255.0753],[0,0,1]])
K[3] = np.mat([[865.0810,0,246.8229],[0,815.2741,26.5714],[0,0,1]])

R = [[],[],[],[]]
R[0] = np.eye(3)
R[1] = np.mat([[-0.0675806016351768, -0.982529583013518, 0.173402655071686],[0.990471005641690, -0.0451651368840190, 0.130104947613020],[0.120000205273852,0.180542872785193,0.976219351283667]])
R[2] = np.mat([[-0.991002226100599,0.0983026770797799,0.0908359595237847],[-0.0937183248804074,-0.994163717768325,0.0534357357455923],[0.0955586911027383,0.0444419391117317,0.994431219644034]])
R[3] = np.mat([[-0.0652853836684407,0.989171102442676,-0.131447132991196],[-0.967989336428125,-0.0307859645838843,0.249096103835604],[0.242351940864320,0.143501757748749,0.959516952576825]])

t = [[],[],[],[]]
t[0] = np.mat([[0],[0],[0]])
t[1] = np.mat([[-48.3781855001307],[37.4326487339450],[-80.0286109691908]])
t[2] = np.mat([[58.1183369134425],[200.507235667183],[-34.6758912485446]])
t[3] = np.mat([[-47.3560125789534],[259.595939102267],[132.527292234346]])

F = [[],[],[],[]]
F[0] = np.eye(3)
F[1] = np.mat([[-0.000143937350650658, 2.54089434711942e-06, 0.127386238120900],[2.79005712274578e-05, -0.000149653021207433, 0.102567086622158],[0.102587735629926, -0.0223516004412341, -73.2666646360331]])
F[2] = np.mat([[3.82661757305933e-05,-4.40721243893501e-05,0.268937794250242],[4.98659080320864e-05,2.59076298745460e-07,-0.0953371496539565],[0.244475789385717,-0.0428883912093333,-126.176643973441]])
F[3] = np.mat([[-0.000247810971745205,9.04737599577077e-05,0.328433602250587],[-2.36775092097489e-05,-0.000162675875224207,0.147180137306657],[0.0230035594598073,0.269746899706065,-218.492409491741]])

#F[0] = np.transpose(F[0])
#F[1] = np.transpose(F[1])
#F[2] = np.transpose(F[2])
#F[3] = np.transpose(F[3])
File = np.load('./picked_calibration/calibration.npz')
(dist,K,R,t,F) = File['arr_0']

R[3][0:2,0:2] = -R[3][0:2,0:2]
t[3] = -t[3]

F = [[],[],[],[]]
F[0] = np.eye(3)
F[1] = computeF(K[0],K[1],R[1],t[1])
F[2] = computeF(K[0],K[2],R[2],t[2])
F[3] = computeF(K[0],K[3],R[3],t[3])

print"F0: "
print F[0]
print"F1: "
print F[1]
print"F2: "
print F[2]
print"F3: "
print F[3]


np.savez(SAVE_PATH,(dist,K,R,t,F))